{"version":3,"sources":["webpack:///./src/components/blog-post.js","webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["BlogPostTimestampContainer","rhythm","BlogPostTimestamp","date","time","className","BlogPostHeader","title","path","style","position","height","marginBottom","borderBottom","backgroundColor","float","lineHeight","fontSize","letterSpacing","textTransform","paddingRight","margin","css","to","BlogPostPreview","frontmatter","slug","excerpt","key","padding","dangerouslySetInnerHTML","__html","description","BlogPost","html","Bio","social","useStaticQuery","site","siteMetadata","href","email","linkedin","twitter","github","BlogIndex","data","siteTitle","posts","blogPosts","edges","location","display","fontWeight","whiteSpace","overflow","map","node","postPath","fields","pageQuery"],"mappings":"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","file":"component---src-pages-index-js-798a7dbbf23901ffd036.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { css } from \"@emotion/core\";\n\nimport { rhythm } from \"../utils/typography\";\n\nconst BlogPostTimestampContainer = styled.h2`\n  font-size: 16px;\n  position: absolute;\n  display: block;\n  overflow: hidden;\n  margin-bottom: ${rhythm(1)};\n  width: 100px;\n  height: 1.2em;\n  top: -0.2em;\n  right: 0;\n  margin: 0;\n  \n  .date, .time {\n    padding-left: 8px;\n    background-color: #FFF;\n    position: absolute;\n    right: 0;\n    transition: top 0.2s;\n  }\n  \n  .date {\n    top: 0;\n  }\n  \n  .time {\n    top: 100%;\n  }\n  \n  &:hover, &:focus {\n    .date {\n      top: -100%;\n    }\n    .time {\n      top: 0;\n    }\n  }\n`;\n\nfunction BlogPostTimestamp ({ date, time } ) {\n  return (\n      <BlogPostTimestampContainer>\n        <span className={\"date\"}>\n          {date}\n        </span>\n        <span className={\"time\"}>\n          {time}\n        </span>\n      </BlogPostTimestampContainer>\n  )\n}\n\nfunction BlogPostHeader ({ title, path, date, time }) {\n\n  return (\n      <header style={{\n        position: \"relative\",\n        height: `8px`,\n        marginBottom: `36px`,\n        borderBottom: `1px solid #222`,\n      }}>\n        <h1\n            style={{\n              backgroundColor: `#FFF`,\n              float: \"left\",\n              lineHeight: `14px`,\n              fontSize: `12px`,\n              letterSpacing: `2px`,\n              textTransform: `uppercase`,\n              paddingRight: `6px`,\n              margin: 0,\n            }}\n        >\n          <Link\n              css={css`\n              text-decoration: none;\n\n              &:hover {\n                text-decoration: underline;\n              }\n              `}\n              to={path}\n            >\n            {title}\n          </Link>\n        </h1>\n        <BlogPostTimestamp date={date} time={time} />\n      </header>\n  )\n}\n\nfunction BlogPostPreview ({frontmatter, path, slug, excerpt}) {\n  const title = frontmatter.title || slug;\n\n  return (\n      <article\n          key={slug}\n          style={{\n            marginBottom: `32px`,\n          }}\n        >\n        <BlogPostHeader\n            title={title}\n            date={frontmatter.date}\n            time={frontmatter.time}\n            slug={slug}\n            path={path}\n        />\n\n        <section>\n          <p\n              style={{\n                padding: 0,\n                margin: 0,\n              }}\n              dangerouslySetInnerHTML={{\n                __html: frontmatter.description || excerpt,\n              }}\n          />\n        </section>\n\n        <Link\n            css={css`\n              text-transform: uppercase;\n              text-decoration: none;\n              font-size: 12px;\n              background: white;\n\n              position: relative;\n              display: block;\n              text-align: right;\n\n              &:hover:after {\n                height: 26px;\n                font-size: 26px;\n                line-height: 26px;\n                top: -7px;\n                width: 20px;\n                opacity: 1;\n                transition: all 0.3s, opacity 0.1s 0.05s;\n                -moz-transition: all 0.3s, opacity 0.1s 0.05s;\n                -ms-transition: all 0.3s, opacity 0.1s 0.05s;\n                -webkit-transition: all 0.3s, opacity 0.1s 0.05s;\n                -o-transition: all 0.3s, opacity 0.1s 0.05s;\n              }\n\n              &:after {\n                height: 12px;\n                font-size: 12px;\n                line-height: 12px;\n                top: 0px;\n                left: 100%;\n                content: \"\\\\00BB\";\n                display: inline-block;\n                width: 0px;\n                overflow: hidden;\n                z-index: 1;\n                text-align: right;\n                position: absolute;\n                opacity: 0;\n                transition: all 0.2s, opacity 0.1s;\n                -moz-transition: all 0.2s, opacity 0.1s;\n                -ms-transition: all 0.2s, opacity 0.1s;\n                -webkit-transition: all 0.2s, opacity 0.1s;\n                -o-transition: all 0.2s, opacity 0.1s;\n              }\n              `}\n            to={path}\n          >\n          Read More\n        </Link>\n      </article>\n  )\n}\n\nfunction BlogPost ({ frontmatter, slug, html, path }) {\n\n  const title = frontmatter.title || slug;\n\n  return (\n    <article>\n      <BlogPostHeader\n          title={title}\n          date={frontmatter.date}\n          time={frontmatter.time}\n          slug={slug}\n          path={path}\n      />\n      <section\n          css={css`\n            p {\n              code {\n                padding: 3px 6px;\n              }\n            }\n\n            .gatsby-highlight {\n              &:before {\n                content: \"Code\";\n                display: inline-block;\n                position: absolute;\n                top: -7px;\n                left: 0;\n                text-transform: uppercase;\n                font-size: 10px;\n                line-height: 12px;\n                padding-right: 8px;\n                letter-spacing: 2px;\n                \n                background: #FFF;\n              }\n\n              &[data-language]:before {\n                content: attr(data-language);\n              }\n\n              pre {\n                margin-bottom: 0;\n              }\n\n              position: relative;       \n              margin-bottom: 1.75rem;\n              padding: 16px 0;\n              border-top: 1px solid #222;\n              border-bottom: 1px solid #222;\n            }\n          `}\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      <footer>\n      </footer>\n    </article>\n  );\n}\n\nexport {\n  BlogPostPreview,\n  BlogPost,\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Bio = () => {\n  const { site } = useStaticQuery(\n      graphql`\n        query GetBio {\n            site {\n                siteMetadata {\n                    social {\n                        email\n                        twitter\n                        linkedin\n                        github\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const social = site.siteMetadata.social;\n\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <p>\n        I'm not <i>the</i> James, just a James.\n      </p>\n\n      <p>\n        I love retro science fiction, video games, comics, food, making things,\n        entrepreneurship, and I'm <b>always</b> looking to learn something new.\n      </p>\n\n      <p>\n        I want to bring incredible people together to make the unbelievable into reality.\n        If we approach problems with a thorough understanding of technology and a lot of\n        imagination.. anything is possible.\n      </p>\n\n      <p>\n        Okay?  Let's make something amazing.\n      </p>\n\n      <p>\n        You can\n        {` `}\n        <a href={`mailto:${social.email}`}>send me an email</a>,\n        {` `}\n        <a href={`https://linkedin.com/in/${social.linkedin}`}>connect on LinkedIn</a>,\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>tweet at me</a>,\n        {` `}\n        or <a href={`https://github.com/${social.github}`}>check out my Github</a>.\n\n      </p>\n    </div>\n  );\n};\n\nexport default Bio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {BlogPostPreview} from \"../components/blog-post\";\n\nexport default function BlogIndex(\n    {\n        data: {\n          site: {\n            siteMetadata: {\n              title: siteTitle\n            }\n          },\n          blogPosts: {\n            edges: posts\n          }\n        },\n        location\n    }\n) {\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <Bio />\n      <header\n          style={{\n            marginBottom: `32px`,\n            height: `8px`,\n            lineHeight: `12px`,\n            borderBottom: `1px solid black`,\n          }}\n      >\n        <h2\n            style={{\n              margin: 0,\n              display: `inline-block`,\n              fontSize: `12px`,\n              lineHeight: `16px`,\n              letterSpacing: `2px`,\n              textTransform: `uppercase`,\n              fontWeight: `bold`,\n              backgroundColor: `#FFF`,\n              paddingRight: `4px`,\n              whiteSpace: `nowrap`,\n              overflow: `hidden`,\n            }}\n        >\n          Recent Blog Posts\n        </h2>\n      </header>\n      {posts.map(({ node }) => {\n        const postPath = `/blog${node.fields.slug}`;\n\n        return (\n          <div key={node.fields.slug}>\n            <BlogPostPreview\n              path={postPath}\n              slug={node.fields.slug}\n              frontmatter={node.frontmatter}\n              excerpt={node.excerpt}\n            />\n          </div>\n        );\n      })}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        blogPosts: allMarkdownRemark (\n            filter: { fields:{ sourceName: { eq: \"blog\"} } }\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: 3\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"YYYY/MM/DD\")\n                        time: date(formatString: \"HH:mm z\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}