{"version":3,"sources":["webpack:///./src/templates/on-my-mind-thought.js","webpack:///./src/components/thought.js"],"names":["ThoughtTemplate","data","siteTitle","site","siteMetadata","title","thought","previous","next","location","frontmatter","date","description","excerpt","slug","path","fields","html","style","display","flexWrap","justifyContent","listStyle","padding","to","rel","pageQuery","ThoughtDate","ThoughtHeader","ThoughtBody","Thought","dangerouslySetInnerHTML","__html"],"mappings":"4FAAA,mKAQe,SAASA,EAAT,GAcZ,IAAD,IAZMC,KAGaC,EASnB,EAXQC,KACEC,aACEC,MAGJC,EAMR,EANQA,QACAC,EAKR,EALQA,SACAC,EAIR,EAJQA,KAEFC,EAEN,EAFMA,SAGN,OACE,YAAC,IAAD,CAAQA,SAAUA,EAAUJ,MAAOH,GACjC,YAAC,IAAD,CACIG,MAAK,eAAiBC,EAAQI,YAAYC,KAC1CC,YAAaN,EAAQI,YAAYE,aAAeN,EAAQO,UAE5D,YAAC,IAAD,CACIH,YAAaJ,EAAQI,YACrBI,KAAMR,EAAQQ,KACdC,KAAI,cAAgBT,EAAQU,OAAOF,KACnCG,KAAMX,EAAQW,OAGlB,uBACE,kBACIC,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGb,sBACGhB,GACC,YAAC,OAAD,CAAMiB,GAAE,cAAgBjB,EAASS,OAAOF,KAAQW,IAAI,QAApD,KACKlB,EAASG,YAAYC,OAI9B,sBACGH,GACC,YAAC,OAAD,CAAMgB,GAAE,cAAgBhB,EAAKQ,OAAOF,KAAQW,IAAI,QAC7CjB,EAAKE,YAAYC,KADpB,UAWP,IAAMe,EAAS,c,wHC9DhBC,EAAW,wCAIXC,EAAa,4CAIbC,EAAW,slBAgDjB,SAASC,EAAT,GAAsD,IAAlCpB,EAAiC,EAAjCA,YAAmBO,GAAc,EAApBH,KAAoB,EAAdG,MAAMF,EAAQ,EAARA,KAC3C,OACE,2BACE,YAACa,EAAD,KACE,YAACD,EAAD,KACE,YAAC,OAAD,CAAMH,GAAIT,GACPL,EAAYC,MAAQ,gBAI3B,YAACkB,EAAD,CAAaE,wBAAyB,CAAEC,OAAQf","file":"component---src-templates-on-my-mind-thought-js-42d29f7ee665a9c1eeaf.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport {Thought} from \"../components/thought\";\n\nexport default function ThoughtTemplate(\n    {\n        data: {\n          site: {\n            siteMetadata: {\n              title: siteTitle\n            }\n          },\n          thought,\n          previous,\n          next\n        },\n        location\n    }\n) {\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n          title={`Thoughts on ${thought.frontmatter.date}`}\n          description={thought.frontmatter.description || thought.excerpt}\n        />\n      <Thought\n          frontmatter={thought.frontmatter}\n          slug={thought.slug}\n          path={`/on-my-mind${thought.fields.slug}`}\n          html={thought.html}\n        />\n\n      <nav>\n        <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n          <li>\n            {previous && (\n              <Link to={`/on-my-mind${previous.fields.slug}`} rel=\"prev\">\n                ← {previous.frontmatter.date}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={`/on-my-mind${next.fields.slug}`} rel=\"next\">\n                {next.frontmatter.date} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ThoughtBySlug($slug: String!, $previous: String, $next: String) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    thought: markdownRemark(fields: { slug: { eq: $slug }, sourceName: { eq: \"thoughts\" } }) {\n      id\n      html\n      excerpt\n      fields {\n          slug\n      }\n      frontmatter {\n        date(formatString: \"YYYY/MM/DD\")\n      }\n    }\n    previous: markdownRemark(fields: { slug: { eq: $previous }, sourceName: { eq: \"thoughts\" } }) {\n        id\n        fields {\n            slug\n        }\n        frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n        }\n    }\n    next: markdownRemark(fields: { slug: { eq: $next }, sourceName: { eq: \"thoughts\" } }) {\n        id\n        fields {\n            slug\n        }\n        frontmatter {\n            date(formatString: \"YYYY/MM/DD\")\n        }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nconst ThoughtDate = styled.h1`\n\n`;\n\nconst ThoughtHeader = styled.header`\n\n`;\n\nconst ThoughtBody = styled.section`\n    font-size: 16px;\n    letter-spacing: 0.1em;\n\n    p {\n      code {\n        padding: 3px 6px;\n      }\n    }\n\n    p:first-child img:first-child {\n      float: right;\n      max-width: 40%;\n      margin-left: 16px;\n    }\n\n    .gatsby-highlight {\n      &:before {\n        content: \"Code\";\n        display: inline-block;\n        position: absolute;\n        top: -7px;\n        left: 0;\n        text-transform: uppercase;\n        font-size: 10px;\n        line-height: 12px;\n        padding-right: 8px;\n        letter-spacing: 2px;\n        \n        background: #FFF;\n      }\n\n      &[data-language]:before {\n        content: attr(data-language);\n      }\n\n      pre {\n        margin-bottom: 0;\n      }\n\n      position: relative;       \n      margin-bottom: 1.75rem;\n      padding: 16px 0;\n      border-top: 1px solid #222;\n      border-bottom: 1px solid #222;\n    }\n`;\n\nfunction Thought ({ frontmatter, slug, html, path }) {\n  return (\n    <article>\n      <ThoughtHeader>\n        <ThoughtDate>\n          <Link to={path}>\n            {frontmatter.date || '20XX/YY/ZZ'}\n          </Link>\n        </ThoughtDate>\n      </ThoughtHeader>\n      <ThoughtBody dangerouslySetInnerHTML={{ __html: html }} />\n    </article>\n  );\n}\n\nexport {\n  Thought,\n}\n"],"sourceRoot":""}