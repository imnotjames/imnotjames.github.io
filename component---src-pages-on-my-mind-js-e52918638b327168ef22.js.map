{"version":3,"file":"component---src-pages-on-my-mind-js-e52918638b327168ef22.js","mappings":"sLAIA,MAAMA,GAAcC,EAAAA,EAAAA,GAAA,WAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,SAAAC,OAAA,eAIdC,GAAWJ,EAAAA,EAAAA,GAAA,MAAAC,OAAA,YAAAD,CAAA,IAIXK,GAAaL,EAAAA,EAAAA,GAAA,UAAAC,OAAA,YAAAD,CAAA,IAIbM,GAAWN,EAAAA,EAAAA,GAAA,WAAAC,OAAA,YAAAD,CAAA,CAAAE,KAAA,UAAAC,OAAA,glBAyDjB,SAASI,EAAOC,GAAsC,IAApC,YAAEC,EAAW,KAAEC,EAAI,KAAEC,EAAI,KAAEC,GAAMJ,EAMjD,MALoB,iBAATG,IACTA,EAAOA,EAAKE,QAAQ,SAAU,cAC9BF,EAAOA,EAAKE,QAAQ,UAAW,iBAI/BC,EAAAA,EAAAA,IAACf,EAAc,MACbe,EAAAA,EAAAA,IAACT,EAAa,MACZS,EAAAA,EAAAA,IAACV,EAAW,MACVU,EAAAA,EAAAA,IAACC,EAAAA,KAAI,CAACC,GAAIJ,GACPH,EAAYQ,MAAQ,iBAI3BH,EAAAA,EAAAA,IAACR,EAAW,CAACY,wBAAyB,CAAEC,OAAQR,KAGtD,C,uHCpFe,SAASS,EAAaZ,GAQlC,IANKa,MACEC,MAAOC,cAAeC,MAAOC,IAC7BC,UAAWC,MAAOD,IACnB,SACDE,GACJpB,EAEF,OACIM,EAAAA,EAAAA,IAACe,EAAAA,EAAM,CAACD,SAAUA,EAAUJ,MAAOC,IACjCX,EAAAA,EAAAA,IAACgB,EAAAA,EAAG,CAACN,MAAM,wBAEVE,EAASK,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EACrB,MAAME,EAAa,cAAiBD,EAAKE,OAAOzB,KAEhD,OACII,EAAAA,EAAAA,IAACP,EAAAA,EAAO,CACJ6B,IAAKH,EAAKE,OAAOzB,KACjBA,KAAMuB,EAAKE,OAAOzB,KAClBE,KAAMsB,EACNzB,YAAawB,EAAKxB,YAClBE,KAAMsB,EAAKtB,MACb,IAKhB,C","sources":["webpack://notjam.es/./src/components/thought.js","webpack://notjam.es/./src/pages/on-my-mind.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\n\nconst ThoughtArticle = styled.article`\n    clear: both;\n`;\n\nconst ThoughtDate = styled.h1`\n\n`;\n\nconst ThoughtHeader = styled.header`\n\n`;\n\nconst ThoughtBody = styled.section`\n    font-size: 16px;\n    letter-spacing: 0.1em;\n\n    p {\n      code {\n        padding: 3px 6px;\n      }\n    }\n\n    p:first-child + br {\n      display: none;\n    }\n\n    > br {\n      font-size: 0;\n      float: left;\n    }\n\n    p:first-child img:first-child {\n      float: right;\n      max-width: 40%;\n      margin-left: 16px;\n    }\n\n    .gatsby-highlight {\n      &:before {\n        content: \"Code\";\n        display: inline-block;\n        position: absolute;\n        top: -7px;\n        left: 0;\n        text-transform: uppercase;\n        font-size: 10px;\n        line-height: 12px;\n        padding-right: 8px;\n        letter-spacing: 2px;\n        \n        background: #FFF;\n      }\n\n      &[data-language]:before {\n        content: attr(data-language);\n      }\n\n      pre {\n        margin-bottom: 0;\n      }\n\n      position: relative;       \n      margin-bottom: 1.75rem;\n      padding: 16px 0;\n      border-top: 1px solid #222;\n      border-bottom: 1px solid #222;\n    }\n`;\n\nfunction Thought ({ frontmatter, slug, html, path }) {\n  if (typeof html === 'string') {\n    html = html.replace(/<\\/p>/g, '</p><br />');\n    html = html.replace(/<\\/ul>/g, '</ul><br />');\n  }\n\n  return (\n    <ThoughtArticle>\n      <ThoughtHeader>\n        <ThoughtDate>\n          <Link to={path}>\n            {frontmatter.date || '20XX/YY/ZZ'}\n          </Link>\n        </ThoughtDate>\n      </ThoughtHeader>\n      <ThoughtBody dangerouslySetInnerHTML={{ __html: html }} />\n    </ThoughtArticle>\n  );\n}\n\nexport {\n  Thought,\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {Thought} from \"../components/thought\";\n\nexport default function OnMyMindIndex (\n    {\n        data: {\n          site: {siteMetadata: {title: siteTitle}},\n          thoughts: {edges: thoughts},\n        },\n        location\n   }\n) {\n  return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"What's On My Mind..\" />\n\n        {thoughts.map(({ node }) => {\n          const permalinkPath = `/on-my-mind${node.fields.slug}`;\n\n          return (\n              <Thought\n                  key={node.fields.slug}\n                  slug={node.fields.slug}\n                  path={permalinkPath}\n                  frontmatter={node.frontmatter}\n                  html={node.html}\n              />\n          );\n        })}\n      </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        thoughts: allMarkdownRemark (\n            filter: { fields:{ sourceName: { eq: \"thoughts\"} } },\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    html\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"YYYY/MM/DD\")\n                        time: date(formatString: \"HH:mm z\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["ThoughtArticle","_styled","target","name","styles","ThoughtDate","ThoughtHeader","ThoughtBody","Thought","_ref","frontmatter","slug","html","path","replace","___EmotionJSX","Link","to","date","dangerouslySetInnerHTML","__html","OnMyMindIndex","data","site","siteMetadata","title","siteTitle","thoughts","edges","location","Layout","SEO","map","_ref2","node","permalinkPath","fields","key"],"sourceRoot":""}