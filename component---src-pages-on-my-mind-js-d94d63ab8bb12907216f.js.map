{"version":3,"file":"component---src-pages-on-my-mind-js-d94d63ab8bb12907216f.js","mappings":"2LAGA,MAAMA,GAAqBC,EAAAA,EAAAA,KAAGC,ICHsBC,EDGtB,klCCFvBC,IACHA,EAAMD,EAAQE,MAAM,IAEtBF,EAAQC,IAAMA,EDDcF,ECErBC,IALM,IAAqCA,EAASC,EDwE7D,MAAME,EAA2BC,EAAAA,OAAOC,QAAOC,WAAA,CAAAC,YAAA,qCAAAC,YAAA,eAAdJ,CAAc,QAC3CP,GAGEY,EAAkBC,IAAkB,IAAjB,QAAEC,GAASD,EAChC,OACIE,EAAAA,cAACT,EAAwB,CAAEU,wBAAyB,CAAEC,OAAQH,IAAa,C,kGEzEnF,MAAMI,EAAiBX,EAAAA,QAAOY,QAAOV,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAdJ,CAAc,iBAI/Ba,EAAcb,EAAAA,QAAOc,GAAEZ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAATJ,CAAS,MAIvBe,EAAgBf,EAAAA,QAAOgB,OAAMd,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAbJ,CAAa,qBAI7BiB,EAAcjB,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAdJ,CAAc,mFAC5BP,EAAAA,GASN,SAASyB,EAAOZ,GAAsC,IAApC,YAAEa,EAAW,KAAEC,EAAI,KAAEC,EAAI,KAAEC,GAAMhB,EAMjD,MALoB,iBAATe,IACTA,EAAOA,EAAKE,QAAQ,SAAU,cAC9BF,EAAOA,EAAKE,QAAQ,UAAW,gBAI/Bf,EAAAA,cAACG,EAAc,KACbH,EAAAA,cAACO,EAAa,KACZP,EAAAA,cAACK,EAAW,KACVL,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIH,GACPH,EAAYO,MAAQ,gBAI3BlB,EAAAA,cAACS,EAAW,CAACR,wBAAyB,CAAEC,OAAQW,KAGtD,C,gHCtCe,SAASM,EAAarB,GAQlC,IANKsB,MACEC,MAAOC,cAAeC,MAAOC,IAC7BC,UAAWC,MAAOD,IACnB,SACDE,GACJ7B,EAEF,OACIE,EAAAA,cAAC4B,EAAAA,EAAM,CAACD,SAAUA,EAAUJ,MAAOC,GACjCxB,EAAAA,cAAC6B,EAAAA,EAAG,CAACN,MAAM,wBAEVE,EAASK,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EACrB,MAAME,EAAa,cAAiBD,EAAKE,OAAOtB,KAEhD,OACIZ,EAAAA,cAACU,EAAAA,EAAO,CACJyB,IAAKH,EAAKE,OAAOtB,KACjBA,KAAMoB,EAAKE,OAAOtB,KAClBE,KAAMmB,EACNtB,YAAaqB,EAAKrB,YAClBE,KAAMmB,EAAKnB,MACb,IAKhB,C","sources":["webpack://notjam.es/./src/components/markdown.js","webpack://notjam.es/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://notjam.es/./src/components/thought.js","webpack://notjam.es/./src/pages/on-my-mind.js"],"sourcesContent":["import React from 'react';\nimport { css, styled } from \"styled-components\";\n\nconst MarkdownContentCss = css`\n  font-size: 1rem;\n\n  p, ul, h1, h2, h3, h4, h5, h6, blockquote {\n    margin-bottom: 1.5rem;\n  }\n\n  p:first-child + br {\n    display: none;\n  }\n\n  p {\n    line-height: 1.5rem;\n\n    code {\n      padding: 3px 6px;\n    }\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-size: 1.5rem;\n  }\n  \n  blockquote {\n    padding-left: 1.75rem;\n  }\n\n  ul {\n    list-style: 'â–¶';\n    padding-left: 0.5rem;\n\n    li {\n      padding-bottom: 0.5rem;\n      padding-left: 0.5rem;\n    }\n  }\n\n  .gatsby-highlight {\n    &:before {\n      content: \"Code\";\n      display: inline-block;\n      position: absolute;\n      top: -7px;\n      left: 0;\n      text-transform: uppercase;\n      font-size: 10px;\n      line-height: 12px;\n      padding-right: 8px;\n      letter-spacing: 2px;\n\n      background: #FFF;\n    }\n\n    &[data-language]:before {\n      content: attr(data-language);\n    }\n\n    pre {\n      margin-bottom: 0;\n    }\n\n    position: relative;\n    margin-bottom: 1.75rem;\n    padding: 16px 0;\n    border-top: 1px solid #222;\n    border-bottom: 1px solid #222;\n  }\n`;\n\nconst MarkdownContentContainer = styled.section`\n  ${MarkdownContentCss}\n`;\n\nconst MarkdownContent = ({ content }) => {\n    return (\n        <MarkdownContentContainer  dangerouslySetInnerHTML={{ __html: content }} />\n    )\n}\n\nexport {\n    MarkdownContentCss,\n    MarkdownContent,\n}","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from 'styled-components';\nimport { MarkdownContentCss } from \"./markdown\";\n\nconst ThoughtArticle = styled.article`\n    clear: both;\n`;\n\nconst ThoughtDate = styled.h1`\n\n`;\n\nconst ThoughtHeader = styled.header`\n  font-size: 3rem;\n`;\n\nconst ThoughtBody = styled.section`\n    ${MarkdownContentCss};\n\n    p:first-child img:first-child {\n      float: right;\n      max-width: 40%;\n      margin-left: 16px;\n    }\n`;\n\nfunction Thought ({ frontmatter, slug, html, path }) {\n  if (typeof html === 'string') {\n    html = html.replace(/<\\/p>/g, '</p><br />');\n    html = html.replace(/<\\/ul>/g, '</ul><br />');\n  }\n\n  return (\n    <ThoughtArticle>\n      <ThoughtHeader>\n        <ThoughtDate>\n          <Link to={path}>\n            {frontmatter.date || '20XX/YY/ZZ'}\n          </Link>\n        </ThoughtDate>\n      </ThoughtHeader>\n      <ThoughtBody dangerouslySetInnerHTML={{ __html: html }} />\n    </ThoughtArticle>\n  );\n}\n\nexport {\n  Thought,\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {Thought} from \"../components/thought\";\n\nexport default function OnMyMindIndex (\n    {\n        data: {\n          site: {siteMetadata: {title: siteTitle}},\n          thoughts: {edges: thoughts},\n        },\n        location\n   }\n) {\n  return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"What's On My Mind..\" />\n\n        {thoughts.map(({ node }) => {\n          const permalinkPath = `/on-my-mind${node.fields.slug}`;\n\n          return (\n              <Thought\n                  key={node.fields.slug}\n                  slug={node.fields.slug}\n                  path={permalinkPath}\n                  frontmatter={node.frontmatter}\n                  html={node.html}\n              />\n          );\n        })}\n      </Layout>\n  );\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        thoughts: allMarkdownRemark (\n            filter: { fields:{ sourceName: { eq: \"thoughts\"} } },\n            sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n            edges {\n                node {\n                    html\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"YYYY/MM/DD\")\n                        time: date(formatString: \"HH:mm z\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"names":["MarkdownContentCss","css","_templateObject","strings","raw","slice","MarkdownContentContainer","styled","section","withConfig","displayName","componentId","MarkdownContent","_ref","content","React","dangerouslySetInnerHTML","__html","ThoughtArticle","article","ThoughtDate","h1","ThoughtHeader","header","ThoughtBody","Thought","frontmatter","slug","html","path","replace","Link","to","date","OnMyMindIndex","data","site","siteMetadata","title","siteTitle","thoughts","edges","location","Layout","SEO","map","_ref2","node","permalinkPath","fields","key"],"sourceRoot":""}