{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/print_r-is-terrible/","result":{"data":{"site":{"siteMetadata":{"title":"DEFINITIVELY NOT JAMES","author":"James Ward"}},"post":{"id":"fb3114f4-8a22-5b2f-b89c-34635f604254","excerpt":"The short version: use , don’t use .  is to print human readable representations of a variable’s contents.\nIt is practically useless as a debugging tool.  It…","html":"<p>The short version: use <code class=\"language-text\">var_dump</code>, don’t use <code class=\"language-text\">print_r</code>.</p>\n<p><code class=\"language-text\">print_r</code> is to print human readable representations of a variable’s contents.\nIt is practically useless as a debugging tool.  It isn’t even useful for\nhumans to consume it because no human wants to read arrays or even think about\nthe concept of arrays.</p>\n<p>On first glance it kind of works.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\">php <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'foo bar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nfoo bar\n\nphp <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">3</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Those sure are some fantastic string representations of things.</p>\n<p>But you quickly find out that many things are printed as being the same value.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\">php <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> \n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> \n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> \n<span class=\"token punctuation\">)</span>\n\nphp <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span>\n\nphp <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>When strings are involved, you also can get output that may look the same but\nisn’t because of whitespace or other various non-visible characters.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\">php <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'foo '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"foo\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> foo \n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> foo\n    <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> foo\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>..Or you get things caused by people who just want to watch the world burn.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\">php <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"Array\\n\\t\\t(\\n\\t\\t\\t[0] => Wello\\n\\n\\t\\t)\\n\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">Array</span>\n        <span class=\"token punctuation\">(</span>\n            <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">Array</span>\n                <span class=\"token punctuation\">(</span>\n                        <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> Wello\n\n                <span class=\"token punctuation\">)</span>\n\n        <span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">)</span>\n\nphp <span class=\"token operator\">></span> <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nphp <span class=\"token operator\">></span> <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">Array</span>\n<span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">print_r</code> does not display data in any structured manner and sacrifices\ndifferentiating between types for the sake of readability.  While you are\ndebugging you don’t want readability.  You want to know what the variable\ncontains.  <code class=\"language-text\">var_dump</code> gets you that.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\">php <span class=\"token operator\">></span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'foo '</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"foo\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"foo \"</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"foo\"</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"foo\\000\"</span>\n<span class=\"token punctuation\">}</span>\n\nphp <span class=\"token operator\">></span> <span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword type-declaration\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">double</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword type-declaration\">string</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token string double-quoted-string\">\"0\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Just use <a href=\"http://php.net/var_dump\"><code class=\"language-text\">var_dump</code></a>.  (Or be sane and set up <a href=\"http://xdebug.org/\">xdebug</a>.)</p>","fields":{"slug":"/print_r-is-terrible"},"frontmatter":{"title":"print_r is terrible","date":"2014/07/28","time":"16:22 UTC"}},"previous":{"id":"4f1de9b2-929e-5ecb-829a-2714c6fd85eb","fields":{"slug":"/the-problems-with-long-running-php"},"frontmatter":{"title":"The Problems with Long Running PHP scripts"}},"next":{"id":"c3a55356-f632-5d00-baf6-5590477bc513","fields":{"slug":"/writing-javascript-behavioral-unit-tests"},"frontmatter":{"title":"Writing JavaScript Behavioral Unit Tests"}}},"pageContext":{"slug":"/print_r-is-terrible","postDate":"2014-07-28 11:22:11 -0500","previous":"/the-problems-with-long-running-php","next":"/writing-javascript-behavioral-unit-tests"}},"staticQueryHashes":["63159454"],"slicesMap":{}}