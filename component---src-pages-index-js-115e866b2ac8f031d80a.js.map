{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/pages/index.js"],"names":["Bio","social","useStaticQuery","site","siteMetadata","style","marginBottom","rhythm","href","email","linkedin","twitter","github","BlogIndex","data","siteTitle","title","posts","blogPosts","edges","location","height","lineHeight","borderBottom","margin","display","fontSize","letterSpacing","textTransform","fontWeight","backgroundColor","paddingRight","whiteSpace","overflow","map","node","postPath","fields","slug","key","path","frontmatter","excerpt"],"mappings":"4LAyEeA,EA7DH,WAAO,IAkBXC,EAjBWC,yBAAe,aAAxBC,KAiBYC,aAAaH,OAEjC,OACE,mBACEI,MAAO,CACLC,aAAcC,YAAO,OAGvB,gCACU,4BADV,yBAIA,0HAE4B,+BAF5B,oCAKA,+NAMA,6DAIA,mCAGE,iBAAGC,KAAI,UAAYP,EAAOQ,OAA1B,oBAHF,QAKE,iBAAGD,KAAI,2BAA6BP,EAAOS,UAA3C,uBALF,QAOE,iBAAGF,KAAI,uBAAyBP,EAAOU,SAAvC,eAPF,cASK,iBAAGH,KAAI,sBAAwBP,EAAOW,QAAtC,uBATL,O,oCCjDS,SAASC,EAAT,GAcZ,IAAD,IAZMC,KAGaC,EASnB,EAXQZ,KACEC,aACEY,MAIKC,EAKjB,EANQC,UACEC,MAGJC,EAEN,EAFMA,SAGN,OACE,YAAC,IAAD,CAAQA,SAAUA,EAAUJ,MAAOD,GACjC,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,EAAD,MACA,sBACIX,MAAO,CACLC,aAAa,OACbe,OAAO,MACPC,WAAW,OACXC,aAAa,oBAGjB,kBACIlB,MAAO,CACLmB,OAAQ,EACRC,QAAQ,eACRC,SAAS,OACTJ,WAAW,OACXK,cAAc,MACdC,cAAc,YACdC,WAAW,OACXC,gBAAgB,OAChBC,aAAa,MACbC,WAAW,SACXC,SAAS,WAZf,sBAkBDhB,EAAMiB,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAQ,QAAWD,EAAKE,OAAOC,KAErC,OACE,mBAAKC,IAAKJ,EAAKE,OAAOC,MACpB,YAAC,IAAD,CACEE,KAAMJ,EACNE,KAAMH,EAAKE,OAAOC,KAClBG,YAAaN,EAAKM,YAClBC,QAASP,EAAKO","file":"component---src-pages-index-js-115e866b2ac8f031d80a.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nconst Bio = () => {\n  const { site } = useStaticQuery(\n      graphql`\n        query GetBio {\n            site {\n                siteMetadata {\n                    social {\n                        email\n                        twitter\n                        linkedin\n                        github\n                    }\n                }\n            }\n        }\n    `\n  );\n\n  const social = site.siteMetadata.social;\n\n  return (\n    <div\n      style={{\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <p>\n        I'm not <i>the</i> James, just a James.\n      </p>\n\n      <p>\n        I love retro science fiction, video games, comics, food, making things,\n        entrepreneurship, and I'm <b>always</b> looking to learn something new.\n      </p>\n\n      <p>\n        I want to bring incredible people together to make the unbelievable into reality.\n        If we approach problems with a thorough understanding of technology and a lot of\n        imagination.. anything is possible.\n      </p>\n\n      <p>\n        Okay?  Let's make something amazing.\n      </p>\n\n      <p>\n        You can\n        {` `}\n        <a href={`mailto:${social.email}`}>send me an email</a>,\n        {` `}\n        <a href={`https://linkedin.com/in/${social.linkedin}`}>connect on LinkedIn</a>,\n        {` `}\n        <a href={`https://twitter.com/${social.twitter}`}>tweet at me</a>,\n        {` `}\n        or <a href={`https://github.com/${social.github}`}>check out my Github</a>.\n\n      </p>\n    </div>\n  );\n};\n\nexport default Bio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport {BlogPostPreview} from \"../components/blog-post\";\n\nexport default function BlogIndex(\n    {\n        data: {\n          site: {\n            siteMetadata: {\n              title: siteTitle\n            }\n          },\n          blogPosts: {\n            edges: posts\n          }\n        },\n        location\n    }\n) {\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"Home\" />\n      <Bio />\n      <header\n          style={{\n            marginBottom: `32px`,\n            height: `8px`,\n            lineHeight: `12px`,\n            borderBottom: `1px solid black`,\n          }}\n      >\n        <h2\n            style={{\n              margin: 0,\n              display: `inline-block`,\n              fontSize: `12px`,\n              lineHeight: `16px`,\n              letterSpacing: `2px`,\n              textTransform: `uppercase`,\n              fontWeight: `bold`,\n              backgroundColor: `#FFF`,\n              paddingRight: `4px`,\n              whiteSpace: `nowrap`,\n              overflow: `hidden`,\n            }}\n        >\n          Recent Blog Posts\n        </h2>\n      </header>\n      {posts.map(({ node }) => {\n        const postPath = `/blog${node.fields.slug}`;\n\n        return (\n          <div key={node.fields.slug}>\n            <BlogPostPreview\n              path={postPath}\n              slug={node.fields.slug}\n              frontmatter={node.frontmatter}\n              excerpt={node.excerpt}\n            />\n          </div>\n        );\n      })}\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        blogPosts: allMarkdownRemark (\n            filter: { fields:{ sourceName: { eq: \"blog\"} } }\n            sort: { fields: [frontmatter___date], order: DESC }\n            limit: 3\n        ) {\n            edges {\n                node {\n                    excerpt\n                    fields {\n                        slug\n                    }\n                    frontmatter {\n                        date(formatString: \"YYYY/MM/DD\")\n                        time: date(formatString: \"HH:mm z\")\n                        title\n                    }\n                }\n            }\n        }\n    }\n`;\n"],"sourceRoot":""}